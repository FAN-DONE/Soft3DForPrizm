#include "./main.h"

int main(){
	VRAM_base=(color_t*)GetVRAMAddress();
	Bdisp_EnableColor(1);
	EnableStatusArea(3);


	Vec3f data[72] = {
	-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
	 0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
	 0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
	 0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
	-0.5f,  0.5f, -0.5f,  0.0f,  0.0f, -1.0f,
	-0.5f, -0.5f, -0.5f,  0.0f,  0.0f, -1.0f,

	-0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,
	 0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  0.0f, 1.0f,
	-0.5f, -0.5f,  0.5f,  0.0f,  0.0f, 1.0f,

	-0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,
	-0.5f,  0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
	-0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
	-0.5f, -0.5f, -0.5f, -1.0f,  0.0f,  0.0f,
	-0.5f, -0.5f,  0.5f, -1.0f,  0.0f,  0.0f,
	-0.5f,  0.5f,  0.5f, -1.0f,  0.0f,  0.0f,

	 0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,
	 0.5f,  0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
	 0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
	 0.5f, -0.5f, -0.5f,  1.0f,  0.0f,  0.0f,
	 0.5f, -0.5f,  0.5f,  1.0f,  0.0f,  0.0f,
	 0.5f,  0.5f,  0.5f,  1.0f,  0.0f,  0.0f,

	-0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,
	 0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,
	 0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
	 0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
	-0.5f, -0.5f,  0.5f,  0.0f, -1.0f,  0.0f,
	-0.5f, -0.5f, -0.5f,  0.0f, -1.0f,  0.0f,

	-0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,
	 0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
	 0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
	-0.5f,  0.5f,  0.5f,  0.0f,  1.0f,  0.0f,
	-0.5f,  0.5f, -0.5f,  0.0f,  1.0f,  0.0f

	};
	Vec3f lightPosf = { 1.0f,1.0f,1.0f };
	Vec3f af = { 1.0f,0.5f,0.31f };
	Vec3f bf = { 1.0f,1.0f,1.0f };
	Vec3i a = ftofix3(af);
	Vec3i b = ftofix3(bf);
	Vec3i d0,d1,d2;
	Vec3i n0,n1,n2;
	int angle=30;
	Vec3f ttr0={1.0f,0.0f,0.0f};
	Vec3f ttr1={-1.0f,0.0f,0.0f};
	//Vec3f ttr2={2.0f,0.0f,0.0f};
	

	bool done=true;
	while(done){
		if(*((unsigned short*)0xA44B0008)==0x8)//MENU¼ü
			done=false;
		if(*((unsigned short*)0xA44B0008)==0x2)//ÉÏ¼ü
			lightPosf.x+=0.1f;
		if(*((unsigned short*)0xA44B0006)==0x400)//ÏÂ¼ü
			lightPosf.x-=0.1f;
		if(*((unsigned short*)0xA44B0008)==0x4)//×ó¼ü
			lightPosf.x+=0.1f;
		if(*((unsigned short*)0xA44B0006)==0x200)//ÓÒ¼ü
			lightPosf.x-=0.1f;
		if(*((unsigned short*)0xA44B0006)==0x8)//sin¼ü
			angle+=5;

		fxcg_VRAMClear(0x0);

		Vec3i lightPos = ftofix3(lightPosf);
		for (int i = 0; i < 72; i += 6)
		{ 
			tr3(data[i], data[i + 1], angle, &d0, &n0);
			tr3(data[i + 2], data[i + 3], angle, &d1, &n1);
			tr3(data[i + 4], data[i + 5], angle, &d2, &n2);
			fxcg_triangleVecLight(d0, n0, d1, n1, d2, n2, lightPos,a,b);

			tr3t(data[i], data[i + 1],ttr0 ,angle, &d0, &n0);
			tr3t(data[i + 2], data[i + 3],ttr0 ,angle, &d1, &n1);
			tr3t(data[i + 4], data[i + 5],ttr0, angle, &d2, &n2);
			fxcg_triangleVecLight(d0, n0, d1, n1, d2, n2, lightPos,a,b);

			tr3t(data[i], data[i + 1],ttr1,angle, &d0, &n0);
			tr3t(data[i + 2], data[i + 3],ttr1 ,angle, &d1, &n1);
			tr3t(data[i + 4], data[i + 5],ttr1, angle, &d2, &n2);
			fxcg_triangleVecLight(d0, n0, d1, n1, d2, n2, lightPos,a,b);
		}


		if (angle==360)
			angle=0;

		
		
		
		fxcg_PutDisplay();
		fxcg_PutDisplayWait();
	}
}
